---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: heimdall-admin
  annotations:
    reloader.stakater.com/auto: "true"
spec:
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  minReadySeconds: 5
  selector:
    matchLabels:
      app: heimdall-admin
  template:
    metadata:
      labels:
        app: heimdall-admin
      annotations:
        sidecar.istio.io/proxyCPU: "100m"
        sidecar.istio.io/proxyCPULimit: "1000m"
        sidecar.istio.io/proxyMemory: "1Gi"
        sidecar.istio.io/proxyMemoryLimit: "1536Mi"
    spec:
      automountServiceAccountToken: false
      containers:
        - name: heimdall-admin
          image: ghcr.io/prefeitura-rio/heimdall:stable
          envFrom:
            - secretRef:
                name: heimdall-admin-secrets
          resources:
            requests:
              ephemeral-storage: 100Mi
              cpu: 1000m
              memory: 1024Mi
            limits:
              cpu: 2000m
              memory: 2048Mi
          readinessProbe:
            httpGet:
              path: /api/v1/health
              port: 8000
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 3
            failureThreshold: 3
            successThreshold: 1
          livenessProbe:
            httpGet:
              path: /api/v1/health
              port: 8000
            initialDelaySeconds: 10
            periodSeconds: 15
            timeoutSeconds: 3
            failureThreshold: 3
      restartPolicy: Always
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: heimdall-background
  annotations:
    reloader.stakater.com/auto: "true"
spec:
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  minReadySeconds: 5
  selector:
    matchLabels:
      app: heimdall-background
  template:
    metadata:
      labels:
        app: heimdall-background
      annotations:
        sidecar.istio.io/proxyCPU: "50m"
        sidecar.istio.io/proxyCPULimit: "500m"
        sidecar.istio.io/proxyMemory: "512Mi"
        sidecar.istio.io/proxyMemoryLimit: "768Mi"
    spec:
      automountServiceAccountToken: false
      containers:
        - name: heimdall-background
          image: ghcr.io/prefeitura-rio/heimdall:stable
          command: ["uv", "run", "python", "app/background_tasks.py"]
          envFrom:
            - secretRef:
                name: heimdall-admin-secrets
          resources:
            requests:
              ephemeral-storage: 50Mi
              cpu: 500m
              memory: 512Mi
            limits:
              cpu: 1000m
              memory: 1024Mi
      restartPolicy: Always
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: heimdall-admin-pdb
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: heimdall-admin
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: heimdall-background-pdb
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: heimdall-background
---
apiVersion: keda.sh/v1alpha1
kind: ScaledObject
metadata:
  name: heimdall-admin-scaled-object
  annotations:
    autoscaling.keda.sh/trigger-authentication: "default"
spec:
  scaleTargetRef:
    name: heimdall-admin
  minReplicaCount: 2
  maxReplicaCount: 10
  cooldownPeriod: 30
  pollingInterval: 10
  fallback:
    failureThreshold: 3
    replicas: 2
  advanced:
    horizontalPodAutoscalerConfig:
      behavior:
        scaleUp:
          stabilizationWindowSeconds: 60
          policies:
          - type: Percent
            value: 100
            periodSeconds: 15
          - type: Pods
            value: 2
            periodSeconds: 15
          selectPolicy: Max
        scaleDown:
          stabilizationWindowSeconds: 300
          policies:
          - type: Percent
            value: 10
            periodSeconds: 60
          - type: Pods
            value: 1
            periodSeconds: 60
          selectPolicy: Max
  triggers:
    - type: prometheus
      metadata:
        serverAddress: http://prometheus.istio-system.svc.cluster.local:9090
        metricName: http_requests_total
        threshold: "250"
        query: sum(rate(istio_requests_total{destination_workload="heimdall-admin"}[30s]))
        activationThreshold: "200"
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: heimdall-admin
  name: heimdall-admin
spec:
  ports:
    - name: "80"
      port: 80
      targetPort: 8000
  selector:
    app: heimdall-admin